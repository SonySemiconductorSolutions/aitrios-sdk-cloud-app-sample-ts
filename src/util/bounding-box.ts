/*
 * Copyright 2023 Sony Semiconductor Solutions Corp. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// automatically generated by the FlatBuffers compiler, do not modify

import { BoundingBox2d } from './bounding-box2d'

export enum BoundingBox {
  // eslint-disable-next-line no-unused-vars
  NONE = 0,
  // eslint-disable-next-line no-unused-vars
  BoundingBox2d = 1
}

export function unionToBoundingBox (
  type: BoundingBox,
  accessor: (obj:BoundingBox2d) => BoundingBox2d|null
): BoundingBox2d|null {
  switch (BoundingBox[type]) {
    case 'NONE': return null
    case 'BoundingBox2d': return accessor(new BoundingBox2d())! as BoundingBox2d
    default: return null
  }
}

export function unionListToBoundingBox (
  type: BoundingBox,
  accessor: (index: number, obj:BoundingBox2d) => BoundingBox2d|null,
  index: number
): BoundingBox2d|null {
  switch (BoundingBox[type]) {
    case 'NONE': return null
    case 'BoundingBox2d': return accessor(index, new BoundingBox2d())! as BoundingBox2d
    default: return null
  }
}
